name: build

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: ossrh
          cache: 'maven'
          server-username: OSSRH_USER
          server-password: OSSRH_PASS
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Install MacOS requirements
        run: brew install gnupg@1.4
        if: runner.os == 'macOS'

      - name: Apple Developer Certificates
        run: |
          gpg1 --output .github/workflows/build/certs/dev_id.cer --passphrase "$ENCRYPTION_SECRET" --decrypt .github/workflows/build/certs/dev_id.cer.enc
          gpg1 --output .github/workflows/build/certs/dev_id.p12 --passphrase "$ENCRYPTION_SECRET" --decrypt .github/workflows/build/certs/dev_id.p12.enc
          ./.github/workflows/build/add-key.sh
        if: runner.os == 'macOS'
        env:
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Build and publish package Linux
        run: mvn -T 4 --batch-mode -Djava.awt.headless=true -Dkeystore.password=${{ secrets.KEYSTORE_PASSWD }} clean deploy -P deployment,create-modules,create-sources,create-javadoc,create-autoupdate,create-targz
        if: runner.os == 'Linux'
        env:
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build and publish package Windows
        run: mvn -T 4 --batch-mode '-Djava.awt.headless=true' '-Dkeystore.password=${{ secrets.KEYSTORE_PASSWD }}' clean deploy -P deployment,replace-windows-icon,create-exe
        if: runner.os == 'Windows'
        env:
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build and publish package MacOS
        run: mvn -T 4 --batch-mode -Djava.awt.headless=true -Dkeystore.password=${{ secrets.KEYSTORE_PASSWD }} -Dgephi.apple.notarization.username=$APPLE_USERNAME -Dgephi.apple.notarization.password=$APPLE_PASSWORD -Dgephi.apple.notarization.teamId=$APPLE_TEAM_ID clean deploy -P deployment,create-dmg,notarize-dmg
        if: runner.os == 'macOS'
        env:
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          APPLE_USERNAME: ${{ secrets.APPLE_USERNAME }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: CleanUp MacOS keychain
        run: ./.github/workflows/build/remove-key.sh
        if: runner.os == 'macOS'
